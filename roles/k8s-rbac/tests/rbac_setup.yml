# vim:ft=ansible:
- name: Prepare hosts
  hosts: "k8s"
  user: root
  become: yes
  roles:
    - { role: hostname }
    - { role: hosts }
  vars:
    hostname_newfqdn: "{{ hostvars[inventory_hostname]['node_fqdn'] }}"
    hostname_eth_interface: "eth1"
    hosts_add_basic_ipv6: True
    hosts_add_ansible_managed_hosts: True
    hosts_network_interface: "eth1"
  tags:
    - hosts-prepare

- name: Install and configure docker engine and docker-compose
  hosts: "k8s"
  become: yes
  roles:
    - { role: docker }
  vars:
    docker_package: "docker-ce"
    docker_install_engine: True
    docker_install_compose: True
    docker_configure_daemon: True
    docker_daemon_options:
      experimental: True
      exec-opts: ["native.cgroupdriver=systemd"]
  tags:
    - docker-install

- name: Install ssh key
  hosts: "k8s"
  become: yes
  tasks:
    - file:
        path: "{{ ansible_env.HOME }}/.ssh"
        state: directory

    - name: Add authorized key
      authorized_key:
        user: "{{ ansible_env.USER }}"
        state: present
        key: "{{ lookup('file', '/Users/thanhnguyen/.ssh/ditto_servers.pub') }}"
    - name: Copy ssh private key
      copy:
        src: /Users/thanhnguyen/.ssh/ditto_servers
        dest: "{{ ansible_env.HOME }}/.ssh/id_rsa"
        mode: 0600
  tags:
    - sshkey-install


- name: Install etcd
  hosts: "etcd"
  become: yes
  roles:
    - { role: etcd }
  vars:
    etcd_interface: "eth1"
    etcd_host_cert_dir: "/etc/kubernetes/pki/etcd"
    etcd_cert_org_name: "dittobank.com"
  tags:
    - etcd-install

- name: Install Kubeadm
  hosts: "k8s"
  user: root
  become: yes
  roles:
    - { role: k8s-kubeadm }
  vars:
    kubeadm_firewall_configure: true
    kubeadm_node_interface: "eth1"
    kubeadm_apiserver_cert_sans: ["172.17.8.11", "172.17.8.3", "k8s-01"]
    kubeadm_load_balancer_vip: "172.17.8.3"
    kubeadm_etcd_servers: ["172.17.8.11"]
  tags:
    - k8s-install

- name: Install RBAC
  hosts: "k8s-01"
  user: root
  become: yes
  roles:
    - { role: k8s-rbac }
  vars:
    rbac_subjects:
      - name: tiller
        namespaces: ["kube-system"]
        type: service-account
        role:
          name: cluster-admin
      - name: dev1
        namespaces: ["dev"]
        type: user
        role:
          name: "developer"
          namespaces: ["dev"]
      - name: dev1
        namespaces: ["dev"]
        type: user
        role:
          name: "developer"
          namespaces: ["dev"]
      - name: qa1
        namespaces: ["qa"]
        type: user
        role:
          name: "qa"
          namespaces: ["qa"]
      - name: qa2
        namespaces: ["qa"]
        type: user
        role:
          name: "qa"
          namespaces: ["qa"]
      - name: admin1
        namespaces: ["dev", "qa"]
        type: user
        role:
          name: "nsadmin"
          namespaces: ["dev", "qa"]
      - name: sre
        type: user
        role:
          name: "sre"

    rbac_roles:
      - name: "developer"
        namespaces: ["dev"]
        rules:
          - apiGroups: ["", "batch", "extensions", "apps"]
            resources: ["*"]
            verbs: ["*"]
      - name: "qa"
        namespaces: ["qa"]
        rules:
          - apiGroups: ["", "batch", "extensions", "apps"]
            resources: ["*"]
            verbs: ["*"]
      - name: "nsadmin"
        namespaces: ["dev", "qa"]
        rules:
          - apiGroups: ["", "batch", "extensions", "apps"]
            resources: ["*"]
            verbs: ["*"]
      - name: "sre"
        rules:
          - apiGroups: ["", "batch", "extensions", "apps"]
            resources: ["*"]
            verbs: ["*"]
  tags:
    - k8s-rbac-install
