---
# tasks file for k8s-rbac

#- name: Create namespace
  #k8s:
    #name: "{{ item }}"
    #api_version: v1
    #kind: Namespace
    #state: present
  #with_items:
    #- "{{ rbac_namespaces }}"

#- name: "Create role"
  #k8s:
    #state: present
    #definition:
      #kind: Role
      #apiVersion: rbac.authorization.k8s.io/v1
      #metadata:
        #name: "{{ item.name }}"
        #namespace: "{{ item.namespace }}"
      #rules:
        #- "{{ item.rules }}"
  #with_items:
    #- "{{ rbac_roles_namespaces }}"

#- name: "Create cluster role"
  #k8s:
    #state: present
    #definition:
      #kind: ClusterRole
      #apiVersion: rbac.authorization.k8s.io/v1
      #metadata:
        #name: "{{ item.name }}"
      #rules:
        #- "{{ item.rules }}"
  #with_items:
    #- "{{ rbac_clusterroles_namespaces }}"

#- name: "Create role binding to service account"
  #k8s:
    #state: present
    #definition:
      #kind: RoleBinding
      #apiVersion: rbac.authorization.k8s.io/v1
      #metadata:
        #name: "{{ item.role }}-rolebinding"
        #namespace: "{{ item.role.namespace }}"
      #subjects:
      #- kind: ServiceAccount
        #name: "{{ item.name }}"
        #namespace: "{{ item.namespace }}"
      #roleRef:
        #kind: Role
        #name: "{{ item.role.name }}"
        #apiGroup: rbac.authorization.k8s.io
  #when: item.type == 'service-account' and item.role.namespace is defined
  #with_items:
    #- "{{ rbac_subjects_roles }}"

#- name: "Create cluster role binding to service account"
  #k8s:
    #state: present
    #definition:
      #kind: ClusterRoleBinding
      #apiVersion: rbac.authorization.k8s.io/v1
      #metadata:
        #name: "{{ item.role }}-clusterrolebinding"
      #subjects:
      #- kind: ServiceAccount
        #name: "{{ item.name }}"
        #namespace: "{{ item.namespace }}"
      #roleRef:
        #kind: ClusterRole
        #name: "{{ item.role.name }}"
        #apiGroup: rbac.authorization.k8s.io
  #when: item.type == 'service-account' and item.role.namespace is undefined
  #with_items:
    #- "{{ rbac_subjects_roles }}"

#- name: "Create role binding to user account"
  #k8s:
    #state: present
    #definition:
      #kind: RoleBinding
      #apiVersion: rbac.authorization.k8s.io/v1
      #metadata:
        #name: "{{ item.role }}-rolebinding"
        #namespace: "{{ item.role.namespace }}"
      #subjects:
      #- kind: User
        #name: "{{ item.name }}"
        #apiGroup: rbac.authorization.k8s.io
      #roleRef:
        #kind: Role
        #name: "{{ item.role.name }}"
        #apiGroup: rbac.authorization.k8s.io
  #when: item.type == 'user' and item.role.namespace is defined
  #with_items:
    #- "{{ rbac_subjects_roles }}"

#- name: "Create cluster role binding to user account"
  #k8s:
    #state: present
    #definition:
      #kind: ClusterRoleBinding
      #apiVersion: rbac.authorization.k8s.io/v1
      #metadata:
        #name: "{{ item.role }}-clusterrolebinding"
      #subjects:
      #- kind: User
        #name: "{{ item.name }}"
        #apiGroup: rbac.authorization.k8s.io
      #roleRef:
        #kind: ClusterRole
        #name: "{{ item.role.name }}"
        #apiGroup: rbac.authorization.k8s.io
  #when: item.type == 'user' and item.role.namespace is defined
  #with_items:
    #- "{{ rbac_subjects_roles }}"

- name: "Generate rbac.yaml"
  template:
    src: rbac.yaml.j2
    dest: "{{ rbac_file }}"
    owner: "{{ ansible_env.USER }}"
    mode: 0755

- name: "Create RBAC resources"
  shell: "kubectl create -f {{ rbac_file }}"

