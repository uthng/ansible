---
# tasks file for k8s-kubeadm
# Include specific variables to OS
- name: "Include OS specific variables"
  include_vars: "{{ ansible_os_family|lower }}.yml"
  tags:
    - kubeadm-install
    - kubeadm-init-env

  # Include OS playbook for package installation
- name: "Include OS package installation"
  include: "{{ ansible_os_family|lower }}.yml"
  tags:
    - kubeadm-install
    - kubeadm-init-env

- name: "Include kubeadm playbook"
  include: "kubeadm.yml"
  when: hostvars[inventory_hostname].node_role == "master"
  tags:
    - kubeadm-cluster-setup

# Prepare necessary variables for join a master or a worker
# after cluster initialization
- block:
  - name: "Check if a master host is given"
    assert:
      that:
        - kubeadm_master_host != ""
        - kubeadm_master_host_address != ""
      fail_msg: "You must specify a master host by setting kubeadm_master_host and kubeadm_master_host_address variables"

  # Make use of kubectl on other nodes than master
  - name: "Create kubeconfig folder on remote host"
    file:
      path: "{{ ansible_env.HOME }}/.kube"
      state: directory

  - name: "Create kubeconfig folder on local host"
    become: no
    local_action:
      module: file
      path: "$HOME/.kube"
      state: directory

  - name: "Copy admin.conf from master host to ansible machine"
    fetch:
      src: "{{ kubeadm_kubernetes_dir}}/admin.conf"
      dest: "~/.kube/config"
      flat: yes
    delegate_to: "{{ kubeadm_master_host }}"
    run_once: yes

  - name: "Copy admin.conf from ansible machine to current node"
    copy:
      src: "~/.kube/config"
      dest: "{{ ansible_env.HOME }}/.kube/config"

  - name: "Chown kube config"
    file:
      path: "{{ ansible_env.HOME }}/.kube/config"
      owner: "{{ ansible_env.USER }}"
      group: "{{ ansible_env.USER }}"
      mode: 0755

  - name: "Get cluster join token"
    include: token.yml
    run_once: yes
    delegate_to: "{{ kubeadm_master_host }}"
    when: (kubeadm_join_token == "" or kubeadm_ca_hash == "") and hostvars[inventory_hostname].node_role == "master"

  tags:
    - kubeadm-master-join
    - kubeadm-worker-join
    - kubeadm-calico-install
    - kubeadm-flannel-install
    - kubeadm-weave-install

- name: "Include calico playbook"
  include: "calico.yml"
  when: inventory_hostname == kubeadm_master_host and kubeadm_network == "calico"
  tags:
    - kubeadm-calico-install

- name: "Include flannel playbook"
  include: "flannel.yml"
  when: kubeadm_network == "flannel"
  tags:
    - kubeadm-flannel-install

- name: "Include weave playbook"
  include: "weave.yml"
  when: kubeadm_network == "weave"
  tags:
    - kubeadm-weave-install

- name: "Include master playbook"
  include: "master.yml"
  when: hostvars[inventory_hostname].node_role == "master"
  tags:
    - kubeadm-master-join

- name: "Include worker playbook"
  include: "worker.yml"
  when: hostvars[inventory_hostname].node_role == "worker"
  tags:
    - kubeadm-worker-join
