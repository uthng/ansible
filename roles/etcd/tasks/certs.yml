- name: "Certs | Create all necessary directories"
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ etcd_host_cert_dir }}"
    - "{{ etcd_user_ssh_dir}}"
  tags:
    - etcd-certs-install

- name: "Certs | Install cfssl"
  get_url:
    url: "{{ etcd_url_cfssl }}"
    dest: "{{ etcd_cfssl_bin }}"
    mode: 0755
  tags:
    - etcd-certs-install

- name: "Certs | Install cfssljson"
  get_url:
    url: "{{ etcd_url_cfssljson }}"
    dest: "{{ etcd_cfssljson_bin }}"
    mode: 0755
  tags:
    - etcd-certs-install

- name: "Certs | Copy certificate configuration files "
  template:
    src: "{{ item }}.j2"
    dest: "{{ etcd_host_cert_dir }}/{{ item }}"
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
    mode: 0644
  with_items:
    - "ca-csr.json"
    - "client.json"
    - "ca-config.json"
    - "config.json"
  tags:
    - etcd-certs-install

- name: "Certs | Ensure that {{ etcd_user_ssh_dir }} exists"
  file:
    path: "{{ etcd_user_ssh_dir }}"
    state: directory
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
    mode: 0700
  tags:
    - etcd-certs-install

- name: "Certs | Copy ssh config"
  copy:
    src: ssh_config
    dest: "{{ etcd_user_ssh_dir }}/config"
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
    mode: 0644
  tags:
    - etcd-certs-install

# Generate certificates on the first ETCD server
- block:
  - name: "Certs | Generate CA certs"
    shell: "{{ etcd_cfssl_bin }} gencert -initca ca-csr.json | {{ etcd_cfssljson_bin }} -bare ca -"
    args:
      chdir: "{{ etcd_host_cert_dir }}"

  - name: "Certs | Generate client certs"
    shell: "{{ etcd_cfssl_bin }} gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client client.json | {{ etcd_cfssljson_bin }} -bare client"
    args:
      chdir: "{{ etcd_host_cert_dir }}"

  - name: "Certs | Generate ssh key"
    user:
      name: "{{ etcd_user }}"
      generate_ssh_key: yes
      ssh_key_bits: 4096
    when: etcd_ssh_key_generated

  # Generate automatically ssh key or using Vault to retrieve
  - name: "Certs | Register ssh public key"
    shell: "cat {{ etcd_user_ssh_dir }}/id_rsa.pub"
    register: id_rsa_pub
    when: etcd_ssh_key_generated

  - name: "Certs | Register ssh private key"
    shell: "cat {{ etcd_user_ssh_dir }}/id_rsa"
    register: id_rsa_priv
    when: etcd_ssh_key_generated

  - name: "Certs | Save etcd host generating certificates"
    set_fact:
      etcd_host_master: "{{ inventory_hostname }}"

  run_once: true
  tags:
    - etcd-certs-install

- name: "Certs | Add ssh public key to all etcd servers"
  authorized_key:
    user: "{{ etcd_user }}"
    state: present
    key: "{{ hostvars[etcd_host_master].id_rsa_pub.stdout }}"
  when: etcd_ssh_key_generated

# Copy certificates and generate etcd server & peer certs
- block:
  - name: "Certs | Save ssh private key generated by 1st etcd server"
    shell: "echo '{{ hostvars[etcd_host_master].id_rsa_priv.stdout }}' > {{ etcd_user_ssh_dir }}/id_rsa"
    when: etcd_ssh_key_generated

  - name: "Certs | Set permission ssh keys"
    file:
      path: "{{ etcd_user_ssh_dir }}/{{ item }}"
      owner: "{{ etcd_user }}"
      group: "{{ etcd_user }}"
      mode: 0600
    with_items:
      #- "id_rsa.pub"
      - "id_rsa"
    when: etcd_ssh_key_generated


  - name: "Certs | Copy certs generated by the 1st etcd server"
    shell: "scp {{ etcd_user }}@{{ hostvars[etcd_host_master]['ansible_' + etcd_interface]['ipv4']['address'] }}:{{ etcd_host_cert_dir }}/{{ item }} ./"
    args:
      chdir: "{{ etcd_host_cert_dir }}"
    with_items:
      - "ca.pem"
      - "ca-key.pem"
      - "client.pem"
      - "client-key.pem"
      - "ca-config.json"

  when: inventory_hostname != etcd_host_master
  tags:
    - etcd-certs-install

# Generate server & peer certs on all etcd servers
- name: "Certs | Generate server and peer certs"
  shell: "{{ etcd_cfssl_bin }} gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile={{ item }} config.json | {{ etcd_cfssljson_bin }} -bare {{ item }}"
  args:
    chdir: "{{ etcd_host_cert_dir }}"
  with_items:
    - "peer"
    - "server"
  tags:
    - etcd-certs-install
